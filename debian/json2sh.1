.\"                                      Hey, EMACS: -*- nroff -*-
.\" This Works is placed under the terms of the Copyright Less License,
.\" see file COPYRIGHT.CLL.  USE AT OWN RISK, ABSOLUTELY NO WARRANTY.
.\"
.TH JSON2SH 1 "May 20 2018"
.\" Please adjust this date whenever revising the manpage.
.SH NAME
json2sh \- Convert JSON into bash compatible output
.SH SYNOPSIS
.B json2sh
.RI [PREFIX\ [SEPARATOR]]
.SH DESCRIPTION
.nh
This package allows to access JSON content from shell scripts.
.SH OPTIONS
.nh
.B json2sh
has two optional commandline arguments,
.BI PREFIX
which defaults to
.B JSON_
and
.BI SEPARATOR
which defaults to
.B =
.SH EXAMPLES
.nh
.B . <(json2sh <<<'{"w":"t","f":[6]}')
.RS 8
This reads the JSON definition into shell variables starting with
\fBJSON__\fR.  This sources following lines (which is the output
of \fBjson2sh\fR):
.RS 8
JSON__0_w=t
.br
JSON__0_f_1_=6
.RE
where
.RS 8
.HP 8
\fBJSON_\fR is the prefix, just copied literally,
.HP 8
\fB_\fR is the start of escapes,
.HP 8
\fB0\fR is the escaped dot (which means, it is an "unnamed" object),
.HP 8
\fB_\fR is the end of escapes,
.HP 8
\fBw\fR is the first key \fBw\fR,
.HP 8
\fB=\fR is the \fBSEPARATOR\fR,
.HP 8
\fBt\fR is the first value.
.RE
.PP
Same for the 2nd line, with
.RS 8
.HP 8
\fBf\fR is the 2nd key,
.HP 8
\fB_1_\fR is the escaped array index (starting at 1), so you know that \fBf\fR contains an array,
.HP 8
\fB=6\fR is \fBSEPARATOR\fR and 2nd value.
.RE
.RE
.PP
.B json2sh 'examplecmd\ '\ "\ "\ <<<'{"w":"t","f":[6]}'
.RS 8
This converts the JSON input into lines with calls to function
.BI examplecmd
by chosing a suitable prefix (function name followed by space)
and separator (just a blank).  The output is:
.RS 8
examplecmd _0_w t
.br
examplecmd _0_f_1_ 6
.RE
.RE
.PP
.B . <(facter -j | json2sh)
.RS 8
read all facts, provided by \fBfacter\fR, into the current shell for easy access.
This also works for multiline outputs of facter, like
.br
.B facter -j sshfp_dsa | json2sh
.RE
